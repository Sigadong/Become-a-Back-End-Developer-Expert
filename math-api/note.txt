# Menerapkan Automation Testing dalam Membangun Math API
Math API tidak bisa disebut API bila tidak ada interface untuk mengaksesnya. Jadi, di latihan kali ini kita akan menambahkan
HTTP server(menggunakan Hapi) agar program perhitungan matematika yang kita buat dapat diakses oleh end user.

Seperti biasa, kita akan menerapkan TDD dalam pembuatan HTTP server. Tujuannya untuk menjaga fungsionalitas HTTP server bila
terjadi perubahan. Untuk itu mari kita tentukan desain dari endpoint.

*Fungsi                                       | *Endpoint
add(pertambahan)                              |  GET /add/{a}/{b}
subtract(pengurangan)                         |  GET /subtract/{a}/{b}
multiply(perkalian)                           |  GET /multiply/{a}/{b}
divide(pembagian)                             |  GET /divide/{a}/{b}
rectangle perimeter(keliling persegi panjang) |  GET /rectangle/perimeter/{length}/{width}
rectangle area(luas persegi panjang)          |  GET /rectangle/area/{length}/{width}
triangle perimeter(keliling segitiga)         |  GET /triangle/perimeter/{sideA}/{sideB}/{base}
triangle area (luas segitiga)                 |  GET /triangle/area/{base}/{height}


Seperti apa skenario yang akan kita buat kali ini? Untuk mempersingkat proses penyampaian, kita akan fokus terhadap
behavior utama pada tiap endpoint-nya. Jadi, berikut adalah skenario pengujiannya.

Skenario Pengujian:
#Sebuah objek HTTP Server
* Ketika GET /add
  - Harus menghasilkan response code 200 dan mengembalikan payload value hasil pertambahan a dan b secara tepat
* Ketika GET /subtract
  _ Harus menghasilkan response code 200 dan mengembalikan payload value hasil pengurangan a dan b secara tepat
* Ketika GET /multiply
  - Harus menghasilkan response code 200 dan mengembalikan payload value hasil perkalian a dan b secara tepat
* Ketika GET /divide
  - Harus menghasilkan response code 200 dan mengembalikan payload value hasil pembagian a dan b secara tepat
* Ketika GET /rectangle/perimeter
  - Harus menghasilkan response code 200 dan mengembalikan payload value hasil perhitungan rumus keliling persegi panjang
* Ketika GET /rectangle/area
  - Harus menghasilkan response code 200 dan mengembalikan payload value hasil perhitungan rumus luas persegi panjang
* Ketika GET /triangle/perimeter
  - Harus menghasilkan response code 200 dan mengembalikan payload value hasil perhitungan rumus keliling segitiga
* Ketika GET /triangle/area
  - Harus menghasilkan response code 200 dan mengembalikan payload value hasil perhitungan rumus luas segitiga